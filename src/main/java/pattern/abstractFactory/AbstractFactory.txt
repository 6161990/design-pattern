### [AbstractFactory Pattern 의 핵심]
* 구체적인 클래스를 생성하지 않고도 서로 관련이 있거나, 독립적으로 존재하는 여러 객체 군을 생성하기 위한 인터페이스를 제공한다.
* 추상화된 인터페이스 팩토리를 제공하고 상황에 따라 그에 맞는 인스턴스 군이 생성되도록한다.
* AbstractFactory 는 ConcreteFactory 서브클래스를 통해 필요한 제품 객체를 생성하는 책임을 위임한다.
* 구체적 팩토리는 어떤 특정 구현을 갖는 제품 객체를 생성한다.
* 서로 다른 제품 객체를 생성하기 위해서 사용자는 서로 다른 ConcreteFactory 를 사용한다.

### [AbstractFactory Pattern 의 효용]
* 여러 제품군을 한꺼번에 생성할 때 사용.
* 일반적으로 ConcreteFactory 클래스의 인스턴스는 실행 할 때 만들어진다. -> 지연시킬 수 있다?


### [기타]
